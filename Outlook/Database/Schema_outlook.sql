-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE outlook.action_decisions (
  message_id character varying NOT NULL,
  attention_tier character varying NOT NULL CHECK (attention_tier::text = ANY (ARRAY['A'::character varying::text, 'B'::character varying::text])),
  tier_reason text,
  topic_primary character varying,
  topic_secondary character varying,
  source_tier character varying,
  source_name character varying,
  time_urgency character varying CHECK (time_urgency::text = ANY (ARRAY['immediate'::character varying::text, 'today'::character varying::text, 'this_week'::character varying::text, 'general'::character varying::text])),
  outlook_categories ARRAY,
  outlook_flag_status character varying,
  outlook_importance character varying CHECK (outlook_importance::text = ANY (ARRAY['high'::character varying::text, 'normal'::character varying::text, 'low'::character varying::text])),
  folder_location character varying DEFAULT 'inbox'::character varying CHECK (folder_location::text = ANY (ARRAY['inbox'::character varying::text, 'archive'::character varying::text, 'trash'::character varying::text, 'deleted'::character varying::text])),
  sync_status character varying DEFAULT 'pending'::character varying CHECK (sync_status::text = ANY (ARRAY['pending'::character varying::text, 'synced'::character varying::text, 'failed'::character varying::text, 'partial'::character varying::text, 'user_modified'::character varying::text])),
  synced_to_outlook_at timestamp with time zone,
  outlook_state_snapshot jsonb,
  confidence_score integer CHECK (confidence_score >= 0 AND confidence_score <= 100),
  ai_reasoning text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT action_decisions_pkey PRIMARY KEY (message_id),
  CONSTRAINT action_decisions_message_id_fkey FOREIGN KEY (message_id) REFERENCES outlook.emails_ingest(message_id)
);
CREATE TABLE outlook.ai_analysis_log (
  id integer NOT NULL DEFAULT nextval('outlook.ai_analysis_log_id_seq'::regclass),
  message_id text NOT NULL,
  analyzer_version text NOT NULL,
  analyzed_at timestamp with time zone NOT NULL,
  model_name text NOT NULL,
  model_version text NOT NULL,
  raw_analysis jsonb NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT ai_analysis_log_pkey PRIMARY KEY (id),
  CONSTRAINT ai_analysis_log_message_id_fkey FOREIGN KEY (message_id) REFERENCES outlook.emails_ingest(message_id)
);
CREATE TABLE outlook.attachment_review_queue (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  message_id text NOT NULL,
  attachment_id text NOT NULL,
  from_address text,
  from_domain text,
  subject text,
  received_datetime timestamp with time zone,
  attachment_name text NOT NULL,
  content_type text NOT NULL,
  size_bytes bigint NOT NULL,
  is_inline boolean DEFAULT false,
  content_id text,
  review_status text DEFAULT 'pending'::text CHECK (review_status = ANY (ARRAY['pending'::text, 'approved'::text, 'rejected'::text])),
  review_notes text,
  reviewed_by text,
  reviewed_at timestamp with time zone,
  download_status text DEFAULT 'not_downloaded'::text CHECK (download_status = ANY (ARRAY['not_downloaded'::text, 'downloading'::text, 'downloaded'::text, 'failed'::text])),
  downloaded_at timestamp with time zone,
  onedrive_path text,
  download_error text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT attachment_review_queue_pkey PRIMARY KEY (id),
  CONSTRAINT fk_review_queue_message FOREIGN KEY (message_id) REFERENCES outlook.emails_ingest(message_id)
);
CREATE TABLE outlook.attachments (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  message_id text NOT NULL,
  attachment_id text NOT NULL,
  name text NOT NULL,
  content_type text,
  size_bytes bigint,
  attachment_type text,
  is_inline boolean DEFAULT false,
  content_id text,
  onedrive_path text,
  local_path text,
  download_url text,
  content_hash text,
  is_downloaded boolean DEFAULT false,
  is_analyzed boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  downloaded_at timestamp with time zone,
  analyzed_at timestamp with time zone,
  user_upn text,
  CONSTRAINT attachments_pkey PRIMARY KEY (id),
  CONSTRAINT attachments_message_id_fkey FOREIGN KEY (message_id) REFERENCES outlook.emails_ingest(message_id)
);
CREATE TABLE outlook.classification_rule_metrics (
  rule_id uuid NOT NULL,
  support integer,
  precision_cat_pct integer,
  precision_action_pct integer,
  avg_relevance_pct integer,
  measured_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT classification_rule_metrics_pkey PRIMARY KEY (rule_id, measured_at),
  CONSTRAINT classification_rule_metrics_rule_id_fkey FOREIGN KEY (rule_id) REFERENCES outlook.classification_rules(id)
);
CREATE TABLE outlook.classification_rules (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  version text NOT NULL,
  is_active boolean NOT NULL DEFAULT true,
  scope text NOT NULL CHECK (scope = ANY (ARRAY['address'::text, 'domain'::text, 'header'::text])),
  feature text NOT NULL,
  key_value text NOT NULL,
  target_category text NOT NULL,
  recommended_action text NOT NULL,
  priority integer NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  rule_type text NOT NULL DEFAULT 'single'::text CHECK (rule_type = ANY (ARRAY['single'::text, 'composite'::text])),
  condition_json jsonb,
  notes text,
  CONSTRAINT classification_rules_pkey PRIMARY KEY (id)
);
CREATE TABLE outlook.contact_lists (
  id integer NOT NULL DEFAULT nextval('outlook.contact_lists_id_seq'::regclass),
  list_type text NOT NULL CHECK (list_type = ANY (ARRAY['vip_finance'::text, 'vip_personal'::text, 'personal'::text, 'business_critical'::text, 'internal'::text])),
  identifier_type text NOT NULL CHECK (identifier_type = ANY (ARRAY['from_domain'::text, 'from_address'::text, 'from_address_contains'::text, 'message_id_domain'::text, 'list_domain'::text, 'unsub_domain'::text])),
  identifier_value text NOT NULL,
  target_category text NOT NULL CHECK (target_category = ANY (ARRAY['business_critical'::text, 'personal_communication'::text, 'financial_news'::text, 'marketing'::text, 'notifications'::text, 'industry_news'::text, 'internal'::text, 'regulatory'::text, 'spam_low_value'::text, 'uncategorized'::text])),
  recommended_action text DEFAULT 'review'::text CHECK (recommended_action = ANY (ARRAY['none'::text, 'read'::text, 'review'::text, 'follow_up'::text, 'urgent'::text, 'archive'::text, 'delete'::text])),
  priority integer DEFAULT 20 CHECK (priority >= 10 AND priority <= 40),
  notes text,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  created_by text,
  CONSTRAINT contact_lists_pkey PRIMARY KEY (id)
);
CREATE TABLE outlook.content_analysis (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  message_id text NOT NULL UNIQUE,
  language text,
  word_count integer,
  sentence_count integer,
  paragraph_count integer,
  link_count integer DEFAULT 0,
  image_count integer DEFAULT 0,
  persons_mentioned ARRAY,
  organizations_mentioned ARRAY,
  locations_mentioned ARRAY,
  sentiment_score numeric,
  business_relevance_score numeric,
  ai_summary text,
  ai_tags ARRAY,
  confidence_score numeric,
  newsletter_sections jsonb,
  categories_found ARRAY,
  analyzed_at timestamp with time zone DEFAULT now(),
  analyzer_version text,
  analysis_level text,
  topics ARRAY,
  external_links ARRAY,
  article_links ARRAY,
  user_upn text,
  content_structure jsonb,
  CONSTRAINT content_analysis_pkey PRIMARY KEY (id),
  CONSTRAINT content_analysis_message_id_fkey FOREIGN KEY (message_id) REFERENCES outlook.emails_ingest(message_id)
);
CREATE TABLE outlook.delta_state (
  user_upn text NOT NULL,
  resource_path text NOT NULL,
  resource_type text NOT NULL,
  delta_link text,
  next_link text,
  last_sync_start timestamp with time zone,
  last_sync_success timestamp with time zone,
  sync_status text DEFAULT 'pending'::text,
  items_processed integer DEFAULT 0,
  error_count integer DEFAULT 0,
  last_error text,
  retry_after timestamp with time zone,
  auto_sync_enabled boolean DEFAULT true,
  sync_interval_minutes integer DEFAULT 10,
  max_items_per_sync integer DEFAULT 100,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  folder_id text,
  folder_name text,
  CONSTRAINT delta_state_pkey PRIMARY KEY (user_upn, resource_path)
);
CREATE TABLE outlook.email_bodies (
  message_id text NOT NULL,
  content text NOT NULL,
  content_type text NOT NULL,
  size_bytes integer NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT email_bodies_pkey PRIMARY KEY (message_id),
  CONSTRAINT fk_email_bodies_message FOREIGN KEY (message_id) REFERENCES outlook.emails_ingest(message_id)
);
CREATE TABLE outlook.email_headers (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  message_id text NOT NULL UNIQUE,
  headers jsonb NOT NULL,
  message_id_header text,
  email_references text,
  in_reply_to text,
  return_path text,
  received_spf text,
  dkim_signature text,
  created_at timestamp with time zone DEFAULT now(),
  user_upn text,
  authentication_results text,
  CONSTRAINT email_headers_pkey PRIMARY KEY (id),
  CONSTRAINT email_headers_message_id_fkey FOREIGN KEY (message_id) REFERENCES outlook.emails_ingest(message_id)
);
CREATE TABLE outlook.email_interest (
  id integer NOT NULL DEFAULT nextval('outlook.email_interest_id_seq'::regclass),
  message_id text NOT NULL,
  model_name text NOT NULL,
  model_version text NOT NULL,
  interest_label text,
  interest_sublabel text,
  confidence integer,
  priority_score integer,
  reasons ARRAY,
  rule_conditions text,
  recommended_action text,
  due_at timestamp with time zone,
  status text DEFAULT 'proposed'::text CHECK (status = ANY (ARRAY['proposed'::text, 'accepted'::text, 'void'::text])),
  decided_at timestamp with time zone NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  user_upn text,
  primary_category text CHECK (primary_category = ANY (ARRAY['business_critical'::text, 'personal_communication'::text, 'financial_news'::text, 'marketing'::text, 'notifications'::text, 'industry_news'::text, 'internal'::text, 'regulatory'::text, 'spam_low_value'::text, 'uncategorized'::text])),
  requires_deep_analysis boolean DEFAULT false,
  CONSTRAINT email_interest_pkey PRIMARY KEY (id),
  CONSTRAINT email_interest_message_id_fkey FOREIGN KEY (message_id) REFERENCES outlook.emails_ingest(message_id)
);
CREATE TABLE outlook.emails_ingest (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  message_id text NOT NULL UNIQUE,
  internet_message_id text UNIQUE,
  conversation_id text,
  received_datetime timestamp with time zone NOT NULL,
  sent_datetime timestamp with time zone,
  created_datetime timestamp with time zone,
  last_modified_datetime timestamp with time zone,
  parent_folder_id text,
  folder_name text,
  folder_path text,
  from_address text,
  from_name text,
  from_domain text,
  sender_address text,
  reply_to_address text,
  to_recipients jsonb,
  cc_recipients jsonb,
  bcc_recipients jsonb,
  to_count integer DEFAULT 0,
  cc_count integer DEFAULT 0,
  bcc_count integer DEFAULT 0,
  subject text,
  importance text,
  sensitivity text,
  inference_classification text,
  categories ARRAY,
  flag_status text,
  is_read boolean DEFAULT false,
  is_draft boolean DEFAULT false,
  has_attachments boolean DEFAULT false,
  body_preview text,
  body_content_type text,
  body_content text,
  body_size_bytes integer,
  has_headers boolean DEFAULT false,
  unsubscribe_link text,
  list_id text,
  precedence text,
  auto_submitted text,
  features jsonb,
  content_analysis jsonb,
  business_value text,
  processing_status text DEFAULT 'pending'::text,
  dedupe_key text UNIQUE,
  content_hash text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  analyzed_at timestamp with time zone,
  notes text,
  tags ARRAY,
  email_category text,
  priority_score integer DEFAULT 50,
  requires_action boolean DEFAULT false,
  auto_processed boolean DEFAULT false,
  ai_analysis jsonb,
  entities jsonb,
  intelligence jsonb,
  relevance jsonb,
  search_vector tsvector,
  user_upn text NOT NULL DEFAULT ''::text,
  is_deleted boolean NOT NULL DEFAULT false,
  deleted_at timestamp with time zone,
  unique_body_preview text,
  web_link text,
  message_id_header text,
  email_references text,
  in_reply_to text,
  needs_body boolean NOT NULL DEFAULT true,
  last_body_fetch_status text,
  body_fetched_at timestamp with time zone,
  retry_at timestamp with time zone,
  CONSTRAINT emails_ingest_pkey PRIMARY KEY (id)
);
CREATE TABLE outlook.folders_cache (
  folder_id text NOT NULL,
  display_name text NOT NULL,
  parent_folder_id text,
  folder_path text,
  folder_class text,
  total_item_count integer DEFAULT 0,
  unread_item_count integer DEFAULT 0,
  child_folder_count integer DEFAULT 0,
  is_hidden boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  last_synced timestamp with time zone,
  CONSTRAINT folders_cache_pkey PRIMARY KEY (folder_id),
  CONSTRAINT fk_folders_parent FOREIGN KEY (parent_folder_id) REFERENCES outlook.folders_cache(folder_id)
);
CREATE TABLE outlook.process_log (
  id integer NOT NULL DEFAULT nextval('outlook.process_log_id_seq'::regclass),
  execution_id text,
  workflow_name text NOT NULL,
  operation text NOT NULL,
  stage text NOT NULL,
  user_upn text,
  resource_path text,
  message_id text,
  batch_size integer,
  started_at timestamp with time zone,
  completed_at timestamp with time zone,
  duration_ms integer,
  detail jsonb,
  error_message text,
  stack_trace text,
  items_processed integer DEFAULT 0,
  items_failed integer DEFAULT 0,
  api_calls_made integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT process_log_pkey PRIMARY KEY (id)
);
CREATE TABLE outlook.rules_snapshot (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  version text NOT NULL UNIQUE,
  created_at timestamp with time zone DEFAULT now(),
  expires_at timestamp with time zone NOT NULL,
  is_active boolean DEFAULT true,
  rules_count integer NOT NULL,
  rules_json jsonb NOT NULL,
  rules_dsl text NOT NULL,
  source_version text,
  total_support integer,
  avg_precision numeric,
  ttl_hours integer DEFAULT 24,
  invalidated_at timestamp with time zone,
  invalidation_reason text,
  usage_count integer DEFAULT 0,
  last_used_at timestamp with time zone,
  CONSTRAINT rules_snapshot_pkey PRIMARY KEY (id)
);
CREATE TABLE outlook.schema_version (
  version text NOT NULL,
  applied_at timestamp with time zone DEFAULT now(),
  description text,
  CONSTRAINT schema_version_pkey PRIMARY KEY (version)
);
CREATE TABLE outlook.sender_classification (
  sender_domain text NOT NULL,
  sender_category text,
  sender_subcategory text,
  priority_level integer DEFAULT 50,
  auto_action text,
  is_trusted boolean DEFAULT false,
  requires_response boolean DEFAULT false,
  average_response_time_hours numeric,
  total_emails integer,
  last_email_date timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  sender_key character varying NOT NULL,
  sender_address character varying,
  source_tier character varying CHECK (source_tier::text = ANY (ARRAY['vip_finance'::character varying::text, 'vip_person'::character varying::text, 'trusted'::character varying::text, 'unknown'::character varying::text, 'internal'::character varying::text])),
  topic_affinity character varying CHECK (topic_affinity::text = ANY (ARRAY['investment'::character varying::text, 'contract'::character varying::text, 'news'::character varying::text, 'communication'::character varying::text, 'regulatory'::character varying::text, 'marketing'::character varying::text, 'notification'::character varying::text, 'internal'::character varying::text, 'unknown'::character varying::text])),
  outlook_categories ARRAY,
  confidence_score integer DEFAULT 50 CHECK (confidence_score >= 0 AND confidence_score <= 100),
  user_corrections integer DEFAULT 0,
  CONSTRAINT sender_classification_pkey PRIMARY KEY (sender_key)
);
CREATE TABLE outlook.sync_log (
  id bigint NOT NULL DEFAULT nextval('outlook.sync_log_id_seq'::regclass),
  message_id character varying,
  sync_direction character varying NOT NULL CHECK (sync_direction::text = ANY (ARRAY['outlook_to_db'::character varying::text, 'db_to_outlook'::character varying::text, 'bidirectional'::character varying::text])),
  sync_type character varying NOT NULL CHECK (sync_type::text = ANY (ARRAY['new_message'::character varying::text, 'category_update'::character varying::text, 'folder_move'::character varying::text, 'flag_update'::character varying::text, 'importance_update'::character varying::text, 'delete'::character varying::text, 'user_correction'::character varying::text, 'auto_archive'::character varying::text, 'auto_delete'::character varying::text])),
  sync_status character varying NOT NULL DEFAULT 'pending'::character varying CHECK (sync_status::text = ANY (ARRAY['pending'::character varying::text, 'synced'::character varying::text, 'failed'::character varying::text, 'conflict'::character varying::text, 'skipped'::character varying::text])),
  outlook_state jsonb,
  db_state jsonb,
  changes_made jsonb,
  error_message text,
  conflict_reason text,
  retry_count integer DEFAULT 0,
  synced_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT sync_log_pkey PRIMARY KEY (id),
  CONSTRAINT sync_log_message_id_fkey FOREIGN KEY (message_id) REFERENCES outlook.emails_ingest(message_id)
);
CREATE TABLE outlook.user_feedback (
  id bigint NOT NULL DEFAULT nextval('outlook.user_feedback_id_seq'::regclass),
  message_id character varying NOT NULL,
  ai_attention_tier character varying,
  ai_topic_primary character varying,
  ai_source_tier character varying,
  ai_categories ARRAY,
  ai_confidence integer,
  user_attention_tier character varying,
  user_topic_primary character varying,
  user_categories ARRAY,
  from_domain character varying,
  from_address character varying,
  interest_label character varying,
  primary_category character varying,
  feedback_type character varying NOT NULL CHECK (feedback_type::text = ANY (ARRAY['tier_correction'::character varying::text, 'category_correction'::character varying::text, 'manual_delete'::character varying::text, 'manual_flag'::character varying::text, 'folder_override'::character varying::text])),
  correction_strength integer,
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_feedback_pkey PRIMARY KEY (id),
  CONSTRAINT user_feedback_message_id_fkey FOREIGN KEY (message_id) REFERENCES outlook.emails_ingest(message_id)
);